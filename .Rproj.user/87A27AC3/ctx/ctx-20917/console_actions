{
    "type": [
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        3,
        2
    ],
    "data": [
        "str(student_performance)",
        "'data.frame':\t10139 obs. of  14 variables:\n $ TumoID                : num  240712000018 240924000012 230619000016 230121000032 250415000009 ...\n $ Age                   : int  14 13 14 14 13 13 13 15 20 14 ...\n $ Classification        : chr  \"T\" \"T\" \"M\" \"M\" ...\n $ Schedule              : chr  \"Sunday 13:30\" \"Monday 17:30\" \"Sunday 13:30\" \"Tuesday 19:30\" ...\n $ Status                : chr  \"Active\" \"Preclosed\" \"Active\" \"Active\" ...\n $ RetentionGrouped      : chr  \"0.5 - 1 Year\" \"0.1 - 0.5 Year\" \"1.5 - 2 Year\"",
        " \"2 - 2.5 Year\" ...\n $ Awarded               : int  38 8 36 35 12 13 19 20 22 52 ...\n $ Rejected              : int  6 0 4 2 4 2 1 3 0 1 ...\n $ Completed             : int  1 0 5 4 0 0 1 2 0 6 ...\n $ Incomplete            : int  0 0 0 2 0 0 0 0 0 1 ...\n $ Participated          : int  0 0 0 0 0 1 2 0 0 0 ...\n $ Withdrawn             : int  0 0 0 2 0 0 0 0 1 1 ...\n $ LearningLabs.Completed: int  0 0 1 2 0 0 0 0 0 0 ...\n $ AttendingSince        : chr  \"10/10/2024\" \"2/10/2025\" \"12/7/2023\" \"6/6/2023\" ...\n",
        "> ",
        "student_info <- read.csv(\"TUMO Yerevan Center Report_Students List_Table - Sheet1.csv\", colClasses = c(\"TumoID\" = \"character\"))",
        "> ",
        "str(student_info) # ",
        "'data.frame':\t10428 obs. of  11 variables:\n $ TumoID           : chr  \"2.30326E+11\" \"2.30113E+11\" \"2.40401E+11\" \"2.50414E+11\" ...\n $ BirthDate        : chr  \"11-Jul-10\" \"9-Nov-10\" \"20-Mar-12\" \"29-Jan-13\" ...\n $ Classification   : chr  \"M\" \"U\" \"T\" \"T\" ...\n $ Status           : chr  \"Active\" \"Active\" \"Active\" \"Active\" ...\n $ StudentSchedule  : chr  \"Sunday 13:30\" \"Friday 17:30\" \"Wednesday 15:30\" \"Wednesday 19:30\" ...\n $ AttendingSince   : chr  \"14-Sep-23\" \"12-Apr-23\" \"5-Jun-24\" \"7-May-25\" ...\n $ RetentionByMo",
        "nths: int  22 27 13 2 27 21 18 6 6 8 ...\n $ RetentionGrouped : chr  \"1.5 - 2 Year\" \"2 - 2.5 Year\" \"1 - 1.5 Year\" \"0.1 - 0.5 Year\" ...\n $ Age              : int  15 14 13 12 14 15 14 14 12 12 ...\n $ Present          : chr  \"109\" \"120\" \"64\" \"13\" ...\n $ PresenceRatio    : chr  \"85\" \"90\" \"86\" \"81\" ...\n",
        "> ",
        "student_info$TumoID <- as.numeric(student_info$TumoID)",
        "> ",
        "options(scipen = 999) ",
        "> ",
        "table(student_info$TumoID)",
        "\n  1108300232   1406170020   1410290040   1411080044   1509260009   1510280006   1604070003 \n           1            1            1            1            1            1            1 \n  1607270031   1607280011   1609060032   1610170018   1702169962   1703130023   1703130038 \n           1            1            1            1            1            1            1 \n  1703230035   1703230037   1707040026   1708240029   1709110008   1709280010   1710090006 \n           1            1            1            1",
        "            1            1            1 \n  1710130007   1711230003   1712060014   1801180031   1801220012   1801300019   1802070021 \n           1            1            1            1            1            1            1 \n  1802120000   1802270037   1802280007   1803020000   1803160012   1804100009   1805040010 \n           1            1            1            1            1            1            1 \n  1806120027   1806180021   1806190030   1806260014   1807100044   1807110026   1807170039 \n           ",
        "1            1            1            1            1            1            1 \n  1807180044   1808230016   1809050025   1809120022   1809130022   1809270003   1809290002 \n           1            1            1            1            1            1            1 \n  1810050010   1810170015   1810170017   1810190043   1810240025   1810290011   1810300044 \n           1            1            1            1            1            1            1 \n  1811190022   1811290033   1812030001   1812110032   181221001",
        "5   1901240011   1901300009 \n           1            1            1            1            1            1            1 \n  1902110003   1902130000   1902180008   1902200006   1903190001   1903190003   1903220022 \n           1            1            1            1            1            1            1 \n  1903220035   1903260005   1903260009   1903260019   1903270014   1903280003   1904020010 \n           1            1            1            1            1            1            1 \n  1904020030   19040300",
        "01   1904040004   1904040014   1904040033   1904220039   1904230048 \n           1            1            1            1            1            1            1 \n  1904250003   1904250136   1904250145   1904260040   1904270053   1905170006   1905200005 \n           1            1            1            1            1            1            1 \n  1905220020   1905270011   1905310020   1906030014   1906030033   1906050001   1906170004 \n           1            1            1            1            1           ",
        " 1            1 \n  1906260005   1906270022   1907030011   1907080019   1907090012   1907110018   1907170006 \n           1            1            1            1            1            1            1 \n  1909060020   1909060021   1909070011   1909190014   1909240022   1909250017   1909260028 \n           1            1            1            1            1            1            1 \n  1910030013   1910040032   1910070034   1910080030   1910110031   1910140005   1910140020 \n           1            1          ",
        "  1            1            1            1            1 \n  1910140022   1910150019   1910170004   1910170006   1910170019   1910210024   1910230018 \n           1            1            1            1            1            1            1 \n  1910250004   1910250019   1910290052   1911010037   1911040027   1911040049   1911050026 \n           1            1            1            1            1            1            1 \n  1911050033   1911060003   1911070007   1911070040   1911070041   1911080034   1911120",
        "007 \n           1            1            1            1            1            1            1 \n  1911120022   1911140010   1911200008   1911210021   1911220031   1911270002   1911270015 \n           1            1            1            1            1            1            1 \n  1911290019   1912030010   1912050020   1912090004   1912090014   1912090017   1912130021 \n           1            1            1            1            1            1            1 \n  1912270004   1912270005   1912270019   200113",
        "0030   2001140018   2001140047   2001160035 \n           1            1            1            1            1            1            1 \n  2001170030   2001170047   2001200045   2001200053   2001230056   2001290042   2001290045 \n           1            1            1            1            1            1            1 \n  2001310072   2001310080   2002030020   2002040027   2002070016   2002070026   2002100028 \n           1            1            1            1            1            1            1 \n  20021",
        "10050   2002130013   2002130028   2002170002   2002190006   2002200015   2002210019 \n           1            1            1            1            1            1            1 \n  2003030005   2003040022   2003050013   2003050016   2003090000   2003100035   2003110019 \n           1            1            1            1            1            1            1 \n  2003110043 150603000000 161107000000 171116000000 180916000000 190317000000 190328000000 \n           1            1            1            1        ",
        "    1            1            1 \n190910000000 191016000000 200123000000 200514000000 200714000000 200715000000 200716000000 \n           1            1            1            1            1            3            1 \n200720000000 200721000000 200726000000 200727000000 200728000000 200729000000 200730000000 \n           3            1            1            1            1            2            1 \n200731000000 200802000000 200829000000 200831000000 200901000000 200903000000 200904000000 \n           3       ",
        "     1            1            1            2            3            4 \n200905000000 200906000000 200908000000 200909000000 200910000000 200911000000 200912000000 \n           4            1            2            2            1            1            2 \n200922000000 201103000000 201104000000 201105000000 201107000000 201108000000 201109000000 \n           1            1            1            6            1            1            5 \n201112000000 201113000000 201114000000 201115000000 201117000000 201119",
        "000000 201216000000 \n           2            2            1            5            1            1            1 \n201217000000 201218000000 201219000000 201220000000 201222000000 201223000000 210206000000 \n           5            1            3            3            1            1            1 \n210211000000 210212000000 210213000000 210215000000 210217000000 210218000000 210219000000 \n           3            4            1            3            3            3            2 \n210220000000 210221000000 21022",
        "2000000 210223000000 210224000000 210305000000 210306000000 \n           2            3            4            1            1            3            1 \n210307000000 210309000000 210310000000 210311000000 210312000000 210313000000 210314000000 \n           1            4            4            6            8            6            1 \n210315000000 210318000000 210323000000 210329000000 210330000000 210331000000 210401000000 \n           2            4            1            1            3            4      ",
        "      4 \n210403000000 210405000000 210406000000 210407000000 210408000000 210409000000 210410000000 \n           5            5           10            2            1            1            1 \n210411000000 210413000000 210414000000 210415000000 210416000000 210417000000 210418000000 \n           1            6            2            7            2            8            4 \n210420000000 210422000000 210423000000 210425000000 210426000000 210428000000 210429000000 \n           4            5            3     ",
        "       4            3            5            5 \n210430000000 210502000000 210503000000 210504000000 210505000000 210506000000 210507000000 \n           4            6            4            2            6            2            4 \n210510000000 210512000000 210514000000 210515000000 210518000000 210519000000 210520000000 \n           1            1            2            7            1            1            2 \n210524000000 210526000000 210527000000 210529000000 210530000000 210531000000 210602000000 \n   ",
        "        2            4            1            3            1            8            2 \n210603000000 210604000000 210605000000 210606000000 210607000000 210608000000 210609000000 \n           2            4            5            3            2            4            1 \n210610000000 210611000000 210613000000 210614000000 210615000000 210616000000 210617000000 \n           3            3            1            5            1            4            2 \n210618000000 210619000000 210621000000 210622000000 210",
        "623000000 210624000000 210625000000 \n           3            2            4            5            4            3            2 \n210626000000 210627000000 210628000000 210629000000 210630000000 210701000000 210702000000 \n           2            1            3            3            2            1            4 \n210703000000 210704000000 210706000000 210707000000 210708000000 210709000000 210710000000 \n           1            1            3            3            5            2            1 \n210712000000 21",
        "0713000000 210714000000 210715000000 210716000000 210717000000 210718000000 \n           5            3            1            1            1            4            2 \n210719000000 210720000000 210721000000 210722000000 210723000000 210724000000 210726000000 \n           4            7            4            1            3            1            2 \n210727000000 210728000000 210729000000 210730000000 210731000000 210824000000 210825000000 \n           6            2            4            6            4   ",
        "         2            7 \n210826000000 210827000000 210830000000 210831000000 210901000000 210902000000 210903000000 \n           8            5            9            4            4            4            5 \n210906000000 210907000000 210908000000 210909000000 210910000000 210911000000 210912000000 \n           1            4            4            5            2            1            3 \n210913000000 210914000000 210915000000 210916000000 210917000000 210918000000 210919000000 \n           2            2  ",
        "          4            4            4            1            2 \n210920000000 210922000000 210923000000 210924000000 210925000000 210926000000 210927000000 \n           3            6            6            4            1            1            4 \n210928000000 210929000000 210930000000 211001000000 211002000000 211004000000 211005000000 \n           4            1            2            1            2            3            4 \n211006000000 211007000000 211008000000 211009000000 211010000000 211011000000 2",
        "11012000000 \n           8            2            2            2            2            2            1 \n211013000000 211014000000 211015000000 211016000000 211017000000 211018000000 211019000000 \n           3            3            3            1            1            3            3 \n211020000000 211021000000 211022000000 211024000000 211025000000 211026000000 211027000000 \n           1            2            1            3            2            5            3 \n211028000000 211030000000 211101000000 ",
        "211102000000 211103000000 211104000000 211105000000 \n           6            1            6            4            3            1            2 \n211106000000 211108000000 211109000000 211110000000 211111000000 211114000000 211115000000 \n           4            4            1            5            2            3            2 \n211116000000 211117000000 211118000000 211119000000 211120000000 211121000000 211122000000 \n           4            3            8            2            2            1            4 ",
        "\n211123000000 211125000000 211126000000 211127000000 211128000000 211129000000 211130000000 \n           4            2            1            3            3            5            2 \n211201000000 211202000000 211203000000 211204000000 211205000000 211206000000 211207000000 \n           3            5            2            3            4            2            4 \n211208000000 211209000000 211210000000 211211000000 211212000000 211213000000 211214000000 \n           4            2            3            4",
        "            4            3            1 \n211215000000 211216000000 211217000000 211218000000 211219000000 211220000000 211221000000 \n           3            2            2            1            3            3            3 \n211222000000 211224000000 211225000000 211226000000 211229000000 220103000000 220105000000 \n           3            1            1            1            1            1            1 \n220109000000 220110000000 220111000000 220112000000 220113000000 220114000000 220115000000 \n           ",
        "2            3            5            1            1            4            4 \n220116000000 220117000000 220118000000 220119000000 220120000000 220121000000 220122000000 \n           3            5            2            5            4            4            2 \n220123000000 220124000000 220125000000 220126000000 220127000000 220128000000 220129000000 \n           4            2            3            2            4            2            4 \n220131000000 220201000000 220202000000 220203000000 22020400000",
        "0 220205000000 220206000000 \n           3            4            4            4            3            3            1 \n220207000000 220208000000 220209000000 220210000000 220211000000 220212000000 220213000000 \n           1            4            2            4            4            4            3 \n220214000000 220215000000 220216000000 220217000000 220218000000 220219000000 220220000000 \n           2            5            3            4            4            2            2 \n220221000000 2202220000",
        "00 220223000000 220224000000 220225000000 220226000000 220227000000 \n           1            4            5            5            7            3            5 \n220228000000 220301000000 220302000000 220303000000 220304000000 220305000000 220306000000 \n           1            3            4            4            3            1            7 \n220307000000 220309000000 220310000000 220311000000 220312000000 220313000000 220314000000 \n           1            3            1            2            5           ",
        " 1            4 \n220315000000 220316000000 220317000000 220318000000 220319000000 220320000000 220321000000 \n           1            2            3            2            5            3            1 \n220322000000 220323000000 220324000000 220325000000 220326000000 220327000000 220328000000 \n           4            2            4            4            8            3            4 \n220329000000 220330000000 220331000000 220401000000 220402000000 220403000000 220404000000 \n           1            3          ",
        "  1            1            2            3            2 \n220405000000 220406000000 220407000000 220408000000 220409000000 220411000000 220412000000 \n           3            4            2            3            3            6            2 \n220413000000 220414000000 220415000000 220416000000 220417000000 220418000000 220419000000 \n           1            1            3            2            3            3            1 \n220420000000 220421000000 220422000000 220423000000 220424000000 220425000000 220427000",
        "000 \n           4            4            1            3            2            6            2 \n220428000000 220429000000 220430000000 220501000000 220502000000 220503000000 220504000000 \n           2            2            5            5            4            4            5 \n220505000000 220506000000 220507000000 220508000000 220509000000 220510000000 220511000000 \n           4            4            4            2            3            3            6 \n220512000000 220514000000 220515000000 22051600",
        "0000 220517000000 220518000000 220519000000 \n           4            4            2            1            2            1            5 \n220521000000 220522000000 220523000000 220524000000 220525000000 220526000000 220527000000 \n           8            4            2            4            3            5            3 \n220528000000 220529000000 220530000000 220531000000 220602000000 220603000000 220604000000 \n           3            5            3            3            4            5            2 \n2206050",
        "00000 220606000000 220607000000 220608000000 220609000000 220610000000 220611000000 \n           5            5            3            7            3            3            3 \n220612000000 220613000000 220614000000 220615000000 220616000000 220617000000 220618000000 \n           5            5            5            6            4            5            5 \n220619000000 220620000000 220621000000 220622000000 220623000000 220624000000 220625000000 \n           5            3            5            6        ",
        "    4            3            5 \n220626000000 220627000000 220628000000 220629000000 220630000000 220701000000 220702000000 \n           4            4            4            4            6            3            2 \n220703000000 220704000000 220705000000 220706000000 220707000000 220708000000 220709000000 \n           1            5            3            3            4            6            1 \n220710000000 220711000000 220712000000 220714000000 220715000000 220716000000 220717000000 \n           3       ",
        "     3            4            3            2            3            3 \n220718000000 220719000000 220720000000 220721000000 220722000000 220723000000 220724000000 \n           5            3            4            4            3            2            4 \n220725000000 220726000000 220727000000 220728000000 220729000000 220731000000 220801000000 \n           3            3            4            4           11            1            2 \n220803000000 220804000000 220805000000 220806000000 220807000000 220808",
        "000000 220809000000 \n           4            3            1            1            3            5            1 \n220810000000 220811000000 220812000000 220813000000 220814000000 220816000000 220817000000 \n           4            2            3            1            3            5            2 \n220818000000 220819000000 220820000000 220821000000 220822000000 220823000000 220824000000 \n           3            3            2            1            5            8           10 \n220825000000 220826000000 22082",
        "7000000 220828000000 220829000000 220830000000 220831000000 \n           6            1            5            3            5            7            5 \n220901000000 220902000000 220903000000 220904000000 220905000000 220906000000 220907000000 \n           8            5            6            7            8            7           10 \n220908000000 220909000000 220910000000 220911000000 220912000000 220913000000 220914000000 \n           8            5            6            5            5            3      ",
        "      4 \n220915000000 220916000000 220917000000 220918000000 220919000000 220920000000 220921000000 \n           5            4            4            4            4            5            3 \n220922000000 220923000000 220924000000 220925000000 220926000000 220927000000 220928000000 \n           2            3            4            4            2            1            2 \n220929000000 220930000000 221001000000 221002000000 221003000000 221004000000 221005000000 \n           6            6            3     ",
        "       6            3            5            8 \n221006000000 221007000000 221008000000 221009000000 221010000000 221012000000 221013000000 \n           9            4            8            9            2            4            6 \n221014000000 221015000000 221016000000 221017000000 221018000000 221019000000 221020000000 \n           2            1            5            3            6            6            7 \n221021000000 221022000000 221023000000 221024000000 221025000000 221026000000 221027000000 \n   ",
        "        7            5            2            8            1            3            7 \n221028000000 221030000000 221031000000 221101000000 221102000000 221103000000 221104000000 \n          11            1            5            5            8            3            4 \n221105000000 221106000000 221107000000 221108000000 221109000000 221110000000 221111000000 \n           4            4            4            9            6            4            3 \n221112000000 221113000000 221114000000 221115000000 221",
        "116000000 221117000000 221118000000 \n           5            7            2            3            2            5            1 \n221119000000 221120000000 221121000000 221122000000 221123000000 221124000000 221125000000 \n           8            2            5            8            3            7            1 \n221126000000 221127000000 221128000000 221129000000 221130000000 221201000000 221202000000 \n           5            4            3            7            5            2            2 \n221203000000 22",
        "1204000000 221205000000 221206000000 221207000000 221208000000 221209000000 \n           5            4            5            3            4            4            3 \n221210000000 221211000000 221212000000 221213000000 221214000000 221215000000 221216000000 \n           4            3            1            5            3            1            5 \n221217000000 221218000000 221219000000 221220000000 221221000000 221222000000 221223000000 \n           5            2            1            3            4   ",
        "         1            1 \n221224000000 221225000000 221226000000 221227000000 221228000000 221229000000 221230000000 \n           4            1            2            1            2            1            1 \n230101000000 230102000000 230103000000 230104000000 230105000000 230106000000 230107000000 \n           1            2            1            3            3            3            2 \n230108000000 230109000000 230110000000 230111000000 230112000000 230113000000 230114000000 \n           7            5  ",
        "         15            2            2            5            7 \n230115000000 230116000000 230117000000 230118000000 230119000000 230120000000 230121000000 \n           7            6           15            5            7            6           11 \n230122000000 230123000000 230124000000 230125000000 230126000000 230127000000 230128000000 \n           6            7            6            5            7            3            6 \n230129000000 230130000000 230131000000 230201000000 230202000000 230203000000 2",
        "30204000000 \n           6            5            6            5            3            8            5 \n230205000000 230206000000 230207000000 230208000000 230209000000 230210000000 230211000000 \n           4            6            6            6            5            5            5 \n230212000000 230213000000 230214000000 230215000000 230216000000 230217000000 230218000000 \n           7            3            9            5            3            6            8 \n230219000000 230220000000 230221000000 ",
        "230222000000 230223000000 230224000000 230225000000 \n           9            9            6            6            7            7            5 \n230226000000 230227000000 230228000000 230301000000 230302000000 230303000000 230304000000 \n           8            9            7            3           13            4            6 \n230305000000 230306000000 230307000000 230308000000 230309000000 230310000000 230311000000 \n           6            8            4            3            3            3            3 ",
        "\n230312000000 230313000000 230314000000 230315000000 230316000000 230317000000 230318000000 \n           6            3            9            5            5            5            8 \n230319000000 230320000000 230321000000 230322000000 230323000000 230324000000 230325000000 \n           8           12            4            3            5            5            6 \n230326000000 230327000000 230328000000 230329000000 230330000000 230331000000 230401000000 \n           3            5            5            8",
        "            4            3            6 \n230402000000 230403000000 230404000000 230405000000 230406000000 230407000000 230408000000 \n           3            4           10            6            4            5            2 \n230409000000 230410000000 230411000000 230412000000 230413000000 230414000000 230415000000 \n           3            2            2            5           12           10            5 \n230416000000 230417000000 230418000000 230419000000 230420000000 230421000000 230422000000 \n           ",
        "7            5            9            8            6            3            8 \n230423000000 230424000000 230425000000 230426000000 230427000000 230428000000 230429000000 \n           7            7            2            7            5            3            5 \n230430000000 230501000000 230502000000 230503000000 230504000000 230505000000 230506000000 \n           3            2            3            4            6            5            7 \n230507000000 230508000000 230509000000 230510000000 23051100000",
        "0 230512000000 230513000000 \n           4           10            7            5            8           11            4 \n230514000000 230515000000 230516000000 230517000000 230518000000 230519000000 230520000000 \n           5           10           10            7            5            5            9 \n230521000000 230522000000 230523000000 230524000000 230525000000 230526000000 230527000000 \n           9           15            6            7           10            9            7 \n230528000000 2305290000",
        "00 230530000000 230531000000 230601000000 230602000000 230603000000 \n          11            7            7            9            5            5            4 \n230604000000 230605000000 230606000000 230607000000 230608000000 230609000000 230610000000 \n           6            4            8           10            7            8            8 \n230611000000 230612000000 230613000000 230614000000 230615000000 230616000000 230617000000 \n           4            8            8           14           10           ",
        " 6            6 \n230618000000 230619000000 230620000000 230621000000 230622000000 230623000000 \n           5           10            8            7           13            9 \n [ reached 'max' / getOption(\"max.print\") -- omitted 724 entries ]\n",
        "> ",
        "student_performance$task_rating <- round(student_performance$Awarded / ",
        "+ ",
        "      (student_performance$Awarded + student_performance$Rejected), 2)",
        "> ",
        "> ",
        "student_performance$training_rating <- round(student_performance$Completed / ",
        "+ ",
        "      (student_performance$Incomplete + student_performance$Participated +       ",
        "+ ",
        "         student_performance$Withdrawn + student_performance$Completed), 2)",
        "> ",
        "str(student_performance)",
        "'data.frame':\t10139 obs. of  16 variables:\n $ TumoID                : num  240712000018 240924000012 230619000016 230121000032 250415000009 ...\n $ Age                   : int  14 13 14 14 13 13 13 15 20 14 ...\n $ Classification        : chr  \"T\" \"T\" \"M\" \"M\" ...\n $ Schedule              : chr  \"Sunday 13:30\" \"Monday 17:30\" \"Sunday 13:30\" \"Tuesday 19:30\" ...\n $ Status                : chr  \"Active\" \"Preclosed\" \"Active\" \"Active\" ...\n $ RetentionGrouped      : chr  \"0.5 - 1 Year\" \"0.1 - 0.5 Year\" \"1.5 - 2 Year\"",
        " \"2 - 2.5 Year\" ...\n $ Awarded               : int  38 8 36 35 12 13 19 20 22 52 ...\n $ Rejected              : int  6 0 4 2 4 2 1 3 0 1 ...\n $ Completed             : int  1 0 5 4 0 0 1 2 0 6 ...\n $ Incomplete            : int  0 0 0 2 0 0 0 0 0 1 ...\n $ Participated          : int  0 0 0 0 0 1 2 0 0 0 ...\n $ Withdrawn             : int  0 0 0 2 0 0 0 0 1 1 ...\n $ LearningLabs.Completed: int  0 0 1 2 0 0 0 0 0 0 ...\n $ AttendingSince        : chr  \"10/10/2024\" \"2/10/2025\" \"12/7/2023\" \"6/6/2023\" ...\n $ task",
        "_rating           : num  0.86 1 0.9 0.95 0.75 0.87 0.95 0.87 1 0.98 ...\n $ training_rating       : num  1 NaN 1 0.5 NaN 0 0.33 1 0 0.75 ...\n",
        "> ",
        "table(student_performance$task_rating)",
        "\n0.36  0.5 0.52 0.53 0.54 0.57 0.58 0.59  0.6 0.61 0.62 0.63 0.64 0.65 0.67 0.68 0.69  0.7 \n   1    1    1    1    2    4    4    2    4    1    6    4    6   17   14   14   23   21 \n0.71 0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79  0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 \n  30   23   28   38   53   54   57   77   96   89  108  128  144  113  182  236  167  352 \n0.89  0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99    1 \n 331  392  384  472  534  631  727  776  793  682  150 2166 \n",
        "> ",
        "table(student_performance$training_rating)",
        "\n   0 0.08 0.09  0.1 0.11 0.12 0.13 0.14 0.17 0.18  0.2 0.21 0.22 0.23 0.25 0.27 0.28 0.29 \n 946    6    5    4    8   17    1   27   38    9   75    3   17    6  190    7    1   61 \n 0.3 0.31 0.32 0.33 0.35 0.36 0.37 0.38 0.39  0.4 0.41 0.42 0.43 0.44 0.45 0.46 0.47 0.48 \n  26    4    2  365    2   20    1   54    2  181    2   11   68   42   20    9    7    1 \n 0.5 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59  0.6 0.62 0.64 0.65 0.67 0.68 0.69  0.7 0.71 \n1012    3    6   11   27   52  114   25    2  252  117  ",
        " 32    3  754    2   14   55  156 \n0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79  0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89 \n   2   35    1  483    6   15   49   13  320    4   23  233    1    9  143    6  108   56 \n 0.9 0.91 0.92 0.93 0.94 0.95 0.96    1 \n  38   17   13    8    4    1    1 2520 \n",
        "> ",
        "merged_df <- inner_join(student_info, student_performance, by = \"TumoID\")",
        "> ",
        "merged_df$PresenceRatio <- round(as.integer(merged_df$PresenceRatio) / 100, 2)",
        "> ",
        "ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Task Rating vs Attendance Ratio\",",
        "+ ",
        "    x = \"Attendance (%)\",",
        "+ ",
        "    y = \"Task Rating (%)\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0, 100, 10))",
        "> ",
        "ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(color = \"steelblue\", size = 2, alpha = 0.7) +                        # points",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\", linewidth = 1) +       # trend line with CI",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Attendance vs Task Rating with Regression Trend Line\",",
        "+ ",
        "    x = \"Attendance Ratio\",",
        "+ ",
        "    y = \"Task Rating\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0, 1, 0.1)) +                                  # ticks every 0.1",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\", size = 12),",
        "+ ",
        "    axis.text = element_text(size = 10)",
        "+ ",
        "  )",
        "> ",
        "pairs(merged_df[, c(\"PresenceRatio\", \"task_rating\")],",
        "+ ",
        "      main = \"Scatterplot Matrix\")",
        "> ",
        "spearman_cor_test_result <- cor.test(merged_df$PresenceRatio, merged_df$task_rating,",
        "+ ",
        "                            method = \"spearman\", exact = FALSE, use = \"complete.obs\")",
        "> ",
        "spearman_cor_test_result",
        "\n\tSpearman's rank correlation rho\n\ndata:  merged_df$PresenceRatio and merged_df$task_rating\nS = 13193615048, p-value = 0.0003643\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n        rho \n-0.05486129 \n\n",
        "> ",
        "pearson_cor_test_result <- cor.test(merged_df$PresenceRatio, merged_df$task_rating,",
        "+ ",
        "                            method = \"pearson\", exact = FALSE, use = \"complete.obs\")",
        "> ",
        "pearson_cor_test_result",
        "\n\tPearson's product-moment correlation\n\ndata:  merged_df$PresenceRatio and merged_df$task_rating\nt = -1.0881, df = 4216, p-value = 0.2766\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.04691147  0.01343134\nsample estimates:\n        cor \n-0.01675532 \n\n",
        "> ",
        "p1 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"steelblue\") +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\") +",
        "+ ",
        "  labs(title = \"Pearson Correlation (Linear)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "# Spearman scatterplot with loess smooth (captures monotonic relationship)",
        "> ",
        "p2 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"darkgreen\") +",
        "+ ",
        "  geom_smooth(method = \"loess\", se = TRUE, color = \"forestgreen\") +",
        "+ ",
        "  labs(title = \"Spearman Correlation (Monotonic)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "p1 + p2",
        "> ",
        "course_outcomes <- merged_df %>%",
        "+ ",
        "  mutate(total_courses = Completed + Incomplete + Participated + Withdrawn) %>%",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(Completed, Incomplete, Participated, Withdrawn),",
        "+ ",
        "    names_to = \"Outcome\",",
        "+ ",
        "    values_to = \"Count\"",
        "+ ",
        "  )",
        "> ",
        "course_outcomes <- course_outcomes %>%",
        "+ ",
        "  mutate(total_bin = cut(total_courses, breaks = c(0, 2, 5, 10, Inf),",
        "+ ",
        "                         labels = c(\"1-2\", \"3-5\", \"6-10\", \"10+\"), right = FALSE))",
        "> ",
        "> ",
        "ggplot(course_outcomes, aes(x = total_bin, y = Count, fill = Outcome)) +",
        "+ ",
        "  geom_bar(stat = \"identity\", position = \"fill\") +",
        "+ ",
        "  scale_y_continuous(labels = percent_format()) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Proportion of Course Outcomes by Number of Courses Started\",",
        "+ ",
        "    x = \"Total Number of Courses Started (Binned)\",",
        "+ ",
        "    y = \"Proportion of Outcomes\",",
        "+ ",
        "    fill = \"Outcome\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "df <- merged_df %>%",
        "+ ",
        "  mutate(",
        "+ ",
        "    total_courses = Completed + Participated + Rejected + Withdrawn,",
        "+ ",
        "    course_volume_group = cut(",
        "+ ",
        "      total_courses,",
        "+ ",
        "      breaks = c(-Inf, 2, 5, 10, Inf),",
        "+ ",
        "      labels = c(\"1–2\", \"3–5\", \"6-10\", \"10+\")",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "> ",
        "> ",
        "outcome_table <- df %>%",
        "+ ",
        "  group_by(course_volume_group) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    Completed = sum(Completed, na.rm = TRUE),",
        "+ ",
        "    Participated = sum(Participated, na.rm = TRUE),",
        "+ ",
        "    Failed = sum(Rejected, na.rm = TRUE),",
        "+ ",
        "    Withdrawn = sum(Withdrawn, na.rm = TRUE)",
        "+ ",
        "  )",
        "> ",
        "outcome_matrix <- as.matrix(outcome_table[, -1])",
        "> ",
        "rownames(outcome_matrix) <- outcome_table$course_volume_group",
        "> ",
        "chisq_result <- chisq.test(outcome_matrix)",
        "> ",
        "outcome_matrix",
        "     Completed Participated Failed Withdrawn\n1–2        428          128    644        56\n3–5       2355          557   2685       406\n6-10      4782          746   5227       865\n10+       2266           38   1568       631\n",
        "> ",
        "chisq_result",
        "\n\tPearson's Chi-squared test\n\ndata:  outcome_matrix\nX-squared = 762.73, df = 9, p-value < 0.00000000000000022\n\n",
        "> ",
        "mosaicplot(outcome_matrix,",
        "+ ",
        "           main = \"Mosaic Plot: Course Volume vs Performance Outcome\",",
        "+ ",
        "           color = TRUE,",
        "+ ",
        "           xlab = \"Number of Courses Started\",",
        "+ ",
        "           ylab = \"Performance Outcome\",",
        "+ ",
        "           las = 1,           # make y-axis labels horizontal",
        "+ ",
        "           cex.axis = 0.8) ",
        "> ",
        "install.packages('vcd')",
        "\u001BG2;\u001BH2;WARNING\u001Bh: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\n\u001BG3;Installing package into ‘C:/Users/hayka/AppData/Local/R/win-library/4.5’\n(as ‘lib’ is unspecified)\n\u001Bg\u001Bg\u001BG3;also installing the dependencies ‘zoo’, ‘colorspace’, ‘lmtest’\n\n\u001Bgtrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/zoo_1.8-14.zip'\ntrying URL 'https://c",
        "ran.rstudio.com/bin/windows/contrib/4.5/colorspace_2.1-1.zip'\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/lmtest_0.9-40.zip'\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/vcd_1.4-13.zip'\n",
        "package ‘zoo’ successfully unpacked and MD5 sums checked\npackage ‘colorspace’ successfully unpacked and MD5 sums checked\npackage ‘lmtest’ successfully unpacked and MD5 sums checked\npackage ‘vcd’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\hayka\\AppData\\Local\\Temp\\RtmpeINjxa\\downloaded_packages\n",
        "> ",
        "mosaic(outcome_matrix,",
        "+ ",
        "       shade = TRUE,",
        "+ ",
        "       legend = TRUE,",
        "+ ",
        "       labeling_args = list(set_varnames = c(",
        "+ ",
        "         Var1 = \"Course Volume Group\",",
        "+ ",
        "         Var2 = \"Performance Outcome\"",
        "+ ",
        "       )),",
        "+ ",
        "       main = \"Mosaic Plot: Course Volume vs Performance Outcome\")",
        "\u001BG1;\u001BH1;Error\u001Bh in mosaic(outcome_matrix, shade = TRUE, legend = TRUE, labeling_args = list(set_varnames = c(Var1 = \"Course Volume Group\",  : \n  could not find function \"mosaic\"\n\u001Bg",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(corrplot)",
        "> ",
        "library(patchwork)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(scales)",
        "> ",
        "library(vcd)",
        "\u001BG3;Loading required package: grid\n\u001Bg",
        "> ",
        "mosaic(outcome_matrix,",
        "+ ",
        "       shade = TRUE,",
        "+ ",
        "       legend = TRUE,",
        "+ ",
        "       labeling_args = list(set_varnames = c(",
        "+ ",
        "         Var1 = \"Course Volume Group\",",
        "+ ",
        "         Var2 = \"Performance Outcome\"",
        "+ ",
        "       )),",
        "+ ",
        "       main = \"Mosaic Plot: Course Volume vs Performance Outcome\")",
        "> ",
        "mosaicplot(outcome_matrix,",
        "+ ",
        "           main = \"Mosaic Plot: Course Volume vs Performance Outcome\",",
        "+ ",
        "           color = TRUE,",
        "+ ",
        "           xlab = \"Number of Courses Started\",",
        "+ ",
        "           ylab = \"Performance Outcome\",",
        "+ ",
        "           las = 1,           # make y-axis labels horizontal",
        "+ ",
        "           cex.axis = 0.8) ",
        "> ",
        "mosaicplot(outcome_matrix,",
        "+ ",
        "           main = \"Mosaic Plot: Course Volume vs Performance Outcome\",",
        "+ ",
        "           color = TRUE,",
        "+ ",
        "           xlab = \"Number of Courses Started\",",
        "+ ",
        "           ylab = \"Performance Outcome\",",
        "+ ",
        "           las = 1,          ",
        "+ ",
        "           cex.axis = 0.8) ",
        "> ",
        "p1 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"steelblue\") +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\") +",
        "+ ",
        "  labs(title = \"Pearson Correlation (Linear)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "# Spearman scatterplot with loess smooth (captures monotonic relationship)",
        "> ",
        "p2 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"darkgreen\") +",
        "+ ",
        "  geom_smooth(method = \"loess\", se = TRUE, color = \"forestgreen\") +",
        "+ ",
        "  labs(title = \"Spearman Correlation (Monotonic)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "p1 + p2",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(corrplot)",
        "> ",
        "library(patchwork)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(scales)",
        "> ",
        "library(vcd)",
        "> ",
        "student_performance <- read.csv(\"TUMO Yerevan_Students Performance_Table - Sheet1.csv\")",
        "> ",
        "str(student_performance)",
        "'data.frame':\t10139 obs. of  14 variables:\n $ TumoID                : num  240712000018 240924000012 230619000016 230121000032 250415000009 ...\n $ Age                   : int  14 13 14 14 13 13 13 15 20 14 ...\n $ Classification        : chr  \"T\" \"T\" \"M\" \"M\" ...\n $ Schedule              : chr  \"Sunday 13:30\" \"Monday 17:30\" \"Sunday 13:30\" \"Tuesday 19:30\" ...\n $ Status                : chr  \"Active\" \"Preclosed\" \"Active\" \"Active\" ...\n $ RetentionGrouped      : chr  \"0.5 - 1 Year\" \"0.1 - 0.5 Year\" \"1.5 - 2 Year\"",
        " \"2 - 2.5 Year\" ...\n $ Awarded               : int  38 8 36 35 12 13 19 20 22 52 ...\n $ Rejected              : int  6 0 4 2 4 2 1 3 0 1 ...\n $ Completed             : int  1 0 5 4 0 0 1 2 0 6 ...\n $ Incomplete            : int  0 0 0 2 0 0 0 0 0 1 ...\n $ Participated          : int  0 0 0 0 0 1 2 0 0 0 ...\n $ Withdrawn             : int  0 0 0 2 0 0 0 0 1 1 ...\n $ LearningLabs.Completed: int  0 0 1 2 0 0 0 0 0 0 ...\n $ AttendingSince        : chr  \"10/10/2024\" \"2/10/2025\" \"12/7/2023\" \"6/6/2023\" ...\n",
        "> ",
        "student_info <- read.csv(\"TUMO Yerevan Center Report_Students List_Table - Sheet1.csv\", colClasses = c(\"TumoID\" = \"character\"))",
        "> ",
        "str(student_info) # ",
        "'data.frame':\t10428 obs. of  11 variables:\n $ TumoID           : chr  \"2.30326E+11\" \"2.30113E+11\" \"2.40401E+11\" \"2.50414E+11\" ...\n $ BirthDate        : chr  \"11-Jul-10\" \"9-Nov-10\" \"20-Mar-12\" \"29-Jan-13\" ...\n $ Classification   : chr  \"M\" \"U\" \"T\" \"T\" ...\n $ Status           : chr  \"Active\" \"Active\" \"Active\" \"Active\" ...\n $ StudentSchedule  : chr  \"Sunday 13:30\" \"Friday 17:30\" \"Wednesday 15:30\" \"Wednesday 19:30\" ...\n $ AttendingSince   : chr  \"14-Sep-23\" \"12-Apr-23\" \"5-Jun-24\" \"7-May-25\" ...\n $ RetentionByMo",
        "nths: int  22 27 13 2 27 21 18 6 6 8 ...\n $ RetentionGrouped : chr  \"1.5 - 2 Year\" \"2 - 2.5 Year\" \"1 - 1.5 Year\" \"0.1 - 0.5 Year\" ...\n $ Age              : int  15 14 13 12 14 15 14 14 12 12 ...\n $ Present          : chr  \"109\" \"120\" \"64\" \"13\" ...\n $ PresenceRatio    : chr  \"85\" \"90\" \"86\" \"81\" ...\n",
        "> ",
        "student_info$TumoID <- as.numeric(student_info$TumoID)",
        "> ",
        "options(scipen = 999) ",
        "> ",
        "table(student_info$TumoID)",
        "\n  1108300232   1406170020   1410290040   1411080044   1509260009   1510280006   1604070003 \n           1            1            1            1            1            1            1 \n  1607270031   1607280011   1609060032   1610170018   1702169962   1703130023   1703130038 \n           1            1            1            1            1            1            1 \n  1703230035   1703230037   1707040026   1708240029   1709110008   1709280010   1710090006 \n           1            1            1            1",
        "            1            1            1 \n  1710130007   1711230003   1712060014   1801180031   1801220012   1801300019   1802070021 \n           1            1            1            1            1            1            1 \n  1802120000   1802270037   1802280007   1803020000   1803160012   1804100009   1805040010 \n           1            1            1            1            1            1            1 \n  1806120027   1806180021   1806190030   1806260014   1807100044   1807110026   1807170039 \n           ",
        "1            1            1            1            1            1            1 \n  1807180044   1808230016   1809050025   1809120022   1809130022   1809270003   1809290002 \n           1            1            1            1            1            1            1 \n  1810050010   1810170015   1810170017   1810190043   1810240025   1810290011   1810300044 \n           1            1            1            1            1            1            1 \n  1811190022   1811290033   1812030001   1812110032   181221001",
        "5   1901240011   1901300009 \n           1            1            1            1            1            1            1 \n  1902110003   1902130000   1902180008   1902200006   1903190001   1903190003   1903220022 \n           1            1            1            1            1            1            1 \n  1903220035   1903260005   1903260009   1903260019   1903270014   1903280003   1904020010 \n           1            1            1            1            1            1            1 \n  1904020030   19040300",
        "01   1904040004   1904040014   1904040033   1904220039   1904230048 \n           1            1            1            1            1            1            1 \n  1904250003   1904250136   1904250145   1904260040   1904270053   1905170006   1905200005 \n           1            1            1            1            1            1            1 \n  1905220020   1905270011   1905310020   1906030014   1906030033   1906050001   1906170004 \n           1            1            1            1            1           ",
        " 1            1 \n  1906260005   1906270022   1907030011   1907080019   1907090012   1907110018   1907170006 \n           1            1            1            1            1            1            1 \n  1909060020   1909060021   1909070011   1909190014   1909240022   1909250017   1909260028 \n           1            1            1            1            1            1            1 \n  1910030013   1910040032   1910070034   1910080030   1910110031   1910140005   1910140020 \n           1            1          ",
        "  1            1            1            1            1 \n  1910140022   1910150019   1910170004   1910170006   1910170019   1910210024   1910230018 \n           1            1            1            1            1            1            1 \n  1910250004   1910250019   1910290052   1911010037   1911040027   1911040049   1911050026 \n           1            1            1            1            1            1            1 \n  1911050033   1911060003   1911070007   1911070040   1911070041   1911080034   1911120",
        "007 \n           1            1            1            1            1            1            1 \n  1911120022   1911140010   1911200008   1911210021   1911220031   1911270002   1911270015 \n           1            1            1            1            1            1            1 \n  1911290019   1912030010   1912050020   1912090004   1912090014   1912090017   1912130021 \n           1            1            1            1            1            1            1 \n  1912270004   1912270005   1912270019   200113",
        "0030   2001140018   2001140047   2001160035 \n           1            1            1            1            1            1            1 \n  2001170030   2001170047   2001200045   2001200053   2001230056   2001290042   2001290045 \n           1            1            1            1            1            1            1 \n  2001310072   2001310080   2002030020   2002040027   2002070016   2002070026   2002100028 \n           1            1            1            1            1            1            1 \n  20021",
        "10050   2002130013   2002130028   2002170002   2002190006   2002200015   2002210019 \n           1            1            1            1            1            1            1 \n  2003030005   2003040022   2003050013   2003050016   2003090000   2003100035   2003110019 \n           1            1            1            1            1            1            1 \n  2003110043 150603000000 161107000000 171116000000 180916000000 190317000000 190328000000 \n           1            1            1            1        ",
        "    1            1            1 \n190910000000 191016000000 200123000000 200514000000 200714000000 200715000000 200716000000 \n           1            1            1            1            1            3            1 \n200720000000 200721000000 200726000000 200727000000 200728000000 200729000000 200730000000 \n           3            1            1            1            1            2            1 \n200731000000 200802000000 200829000000 200831000000 200901000000 200903000000 200904000000 \n           3       ",
        "     1            1            1            2            3            4 \n200905000000 200906000000 200908000000 200909000000 200910000000 200911000000 200912000000 \n           4            1            2            2            1            1            2 \n200922000000 201103000000 201104000000 201105000000 201107000000 201108000000 201109000000 \n           1            1            1            6            1            1            5 \n201112000000 201113000000 201114000000 201115000000 201117000000 201119",
        "000000 201216000000 \n           2            2            1            5            1            1            1 \n201217000000 201218000000 201219000000 201220000000 201222000000 201223000000 210206000000 \n           5            1            3            3            1            1            1 \n210211000000 210212000000 210213000000 210215000000 210217000000 210218000000 210219000000 \n           3            4            1            3            3            3            2 \n210220000000 210221000000 21022",
        "2000000 210223000000 210224000000 210305000000 210306000000 \n           2            3            4            1            1            3            1 \n210307000000 210309000000 210310000000 210311000000 210312000000 210313000000 210314000000 \n           1            4            4            6            8            6            1 \n210315000000 210318000000 210323000000 210329000000 210330000000 210331000000 210401000000 \n           2            4            1            1            3            4      ",
        "      4 \n210403000000 210405000000 210406000000 210407000000 210408000000 210409000000 210410000000 \n           5            5           10            2            1            1            1 \n210411000000 210413000000 210414000000 210415000000 210416000000 210417000000 210418000000 \n           1            6            2            7            2            8            4 \n210420000000 210422000000 210423000000 210425000000 210426000000 210428000000 210429000000 \n           4            5            3     ",
        "       4            3            5            5 \n210430000000 210502000000 210503000000 210504000000 210505000000 210506000000 210507000000 \n           4            6            4            2            6            2            4 \n210510000000 210512000000 210514000000 210515000000 210518000000 210519000000 210520000000 \n           1            1            2            7            1            1            2 \n210524000000 210526000000 210527000000 210529000000 210530000000 210531000000 210602000000 \n   ",
        "        2            4            1            3            1            8            2 \n210603000000 210604000000 210605000000 210606000000 210607000000 210608000000 210609000000 \n           2            4            5            3            2            4            1 \n210610000000 210611000000 210613000000 210614000000 210615000000 210616000000 210617000000 \n           3            3            1            5            1            4            2 \n210618000000 210619000000 210621000000 210622000000 210",
        "623000000 210624000000 210625000000 \n           3            2            4            5            4            3            2 \n210626000000 210627000000 210628000000 210629000000 210630000000 210701000000 210702000000 \n           2            1            3            3            2            1            4 \n210703000000 210704000000 210706000000 210707000000 210708000000 210709000000 210710000000 \n           1            1            3            3            5            2            1 \n210712000000 21",
        "0713000000 210714000000 210715000000 210716000000 210717000000 210718000000 \n           5            3            1            1            1            4            2 \n210719000000 210720000000 210721000000 210722000000 210723000000 210724000000 210726000000 \n           4            7            4            1            3            1            2 \n210727000000 210728000000 210729000000 210730000000 210731000000 210824000000 210825000000 \n           6            2            4            6            4   ",
        "         2            7 \n210826000000 210827000000 210830000000 210831000000 210901000000 210902000000 210903000000 \n           8            5            9            4            4            4            5 \n210906000000 210907000000 210908000000 210909000000 210910000000 210911000000 210912000000 \n           1            4            4            5            2            1            3 \n210913000000 210914000000 210915000000 210916000000 210917000000 210918000000 210919000000 \n           2            2  ",
        "          4            4            4            1            2 \n210920000000 210922000000 210923000000 210924000000 210925000000 210926000000 210927000000 \n           3            6            6            4            1            1            4 \n210928000000 210929000000 210930000000 211001000000 211002000000 211004000000 211005000000 \n           4            1            2            1            2            3            4 \n211006000000 211007000000 211008000000 211009000000 211010000000 211011000000 2",
        "11012000000 \n           8            2            2            2            2            2            1 \n211013000000 211014000000 211015000000 211016000000 211017000000 211018000000 211019000000 \n           3            3            3            1            1            3            3 \n211020000000 211021000000 211022000000 211024000000 211025000000 211026000000 211027000000 \n           1            2            1            3            2            5            3 \n211028000000 211030000000 211101000000 ",
        "211102000000 211103000000 211104000000 211105000000 \n           6            1            6            4            3            1            2 \n211106000000 211108000000 211109000000 211110000000 211111000000 211114000000 211115000000 \n           4            4            1            5            2            3            2 \n211116000000 211117000000 211118000000 211119000000 211120000000 211121000000 211122000000 \n           4            3            8            2            2            1            4 ",
        "\n211123000000 211125000000 211126000000 211127000000 211128000000 211129000000 211130000000 \n           4            2            1            3            3            5            2 \n211201000000 211202000000 211203000000 211204000000 211205000000 211206000000 211207000000 \n           3            5            2            3            4            2            4 \n211208000000 211209000000 211210000000 211211000000 211212000000 211213000000 211214000000 \n           4            2            3            4",
        "            4            3            1 \n211215000000 211216000000 211217000000 211218000000 211219000000 211220000000 211221000000 \n           3            2            2            1            3            3            3 \n211222000000 211224000000 211225000000 211226000000 211229000000 220103000000 220105000000 \n           3            1            1            1            1            1            1 \n220109000000 220110000000 220111000000 220112000000 220113000000 220114000000 220115000000 \n           ",
        "2            3            5            1            1            4            4 \n220116000000 220117000000 220118000000 220119000000 220120000000 220121000000 220122000000 \n           3            5            2            5            4            4            2 \n220123000000 220124000000 220125000000 220126000000 220127000000 220128000000 220129000000 \n           4            2            3            2            4            2            4 \n220131000000 220201000000 220202000000 220203000000 22020400000",
        "0 220205000000 220206000000 \n           3            4            4            4            3            3            1 \n220207000000 220208000000 220209000000 220210000000 220211000000 220212000000 220213000000 \n           1            4            2            4            4            4            3 \n220214000000 220215000000 220216000000 220217000000 220218000000 220219000000 220220000000 \n           2            5            3            4            4            2            2 \n220221000000 2202220000",
        "00 220223000000 220224000000 220225000000 220226000000 220227000000 \n           1            4            5            5            7            3            5 \n220228000000 220301000000 220302000000 220303000000 220304000000 220305000000 220306000000 \n           1            3            4            4            3            1            7 \n220307000000 220309000000 220310000000 220311000000 220312000000 220313000000 220314000000 \n           1            3            1            2            5           ",
        " 1            4 \n220315000000 220316000000 220317000000 220318000000 220319000000 220320000000 220321000000 \n           1            2            3            2            5            3            1 \n220322000000 220323000000 220324000000 220325000000 220326000000 220327000000 220328000000 \n           4            2            4            4            8            3            4 \n220329000000 220330000000 220331000000 220401000000 220402000000 220403000000 220404000000 \n           1            3          ",
        "  1            1            2            3            2 \n220405000000 220406000000 220407000000 220408000000 220409000000 220411000000 220412000000 \n           3            4            2            3            3            6            2 \n220413000000 220414000000 220415000000 220416000000 220417000000 220418000000 220419000000 \n           1            1            3            2            3            3            1 \n220420000000 220421000000 220422000000 220423000000 220424000000 220425000000 220427000",
        "000 \n           4            4            1            3            2            6            2 \n220428000000 220429000000 220430000000 220501000000 220502000000 220503000000 220504000000 \n           2            2            5            5            4            4            5 \n220505000000 220506000000 220507000000 220508000000 220509000000 220510000000 220511000000 \n           4            4            4            2            3            3            6 \n220512000000 220514000000 220515000000 22051600",
        "0000 220517000000 220518000000 220519000000 \n           4            4            2            1            2            1            5 \n220521000000 220522000000 220523000000 220524000000 220525000000 220526000000 220527000000 \n           8            4            2            4            3            5            3 \n220528000000 220529000000 220530000000 220531000000 220602000000 220603000000 220604000000 \n           3            5            3            3            4            5            2 \n2206050",
        "00000 220606000000 220607000000 220608000000 220609000000 220610000000 220611000000 \n           5            5            3            7            3            3            3 \n220612000000 220613000000 220614000000 220615000000 220616000000 220617000000 220618000000 \n           5            5            5            6            4            5            5 \n220619000000 220620000000 220621000000 220622000000 220623000000 220624000000 220625000000 \n           5            3            5            6        ",
        "    4            3            5 \n220626000000 220627000000 220628000000 220629000000 220630000000 220701000000 220702000000 \n           4            4            4            4            6            3            2 \n220703000000 220704000000 220705000000 220706000000 220707000000 220708000000 220709000000 \n           1            5            3            3            4            6            1 \n220710000000 220711000000 220712000000 220714000000 220715000000 220716000000 220717000000 \n           3       ",
        "     3            4            3            2            3            3 \n220718000000 220719000000 220720000000 220721000000 220722000000 220723000000 220724000000 \n           5            3            4            4            3            2            4 \n220725000000 220726000000 220727000000 220728000000 220729000000 220731000000 220801000000 \n           3            3            4            4           11            1            2 \n220803000000 220804000000 220805000000 220806000000 220807000000 220808",
        "000000 220809000000 \n           4            3            1            1            3            5            1 \n220810000000 220811000000 220812000000 220813000000 220814000000 220816000000 220817000000 \n           4            2            3            1            3            5            2 \n220818000000 220819000000 220820000000 220821000000 220822000000 220823000000 220824000000 \n           3            3            2            1            5            8           10 \n220825000000 220826000000 22082",
        "7000000 220828000000 220829000000 220830000000 220831000000 \n           6            1            5            3            5            7            5 \n220901000000 220902000000 220903000000 220904000000 220905000000 220906000000 220907000000 \n           8            5            6            7            8            7           10 \n220908000000 220909000000 220910000000 220911000000 220912000000 220913000000 220914000000 \n           8            5            6            5            5            3      ",
        "      4 \n220915000000 220916000000 220917000000 220918000000 220919000000 220920000000 220921000000 \n           5            4            4            4            4            5            3 \n220922000000 220923000000 220924000000 220925000000 220926000000 220927000000 220928000000 \n           2            3            4            4            2            1            2 \n220929000000 220930000000 221001000000 221002000000 221003000000 221004000000 221005000000 \n           6            6            3     ",
        "       6            3            5            8 \n221006000000 221007000000 221008000000 221009000000 221010000000 221012000000 221013000000 \n           9            4            8            9            2            4            6 \n221014000000 221015000000 221016000000 221017000000 221018000000 221019000000 221020000000 \n           2            1            5            3            6            6            7 \n221021000000 221022000000 221023000000 221024000000 221025000000 221026000000 221027000000 \n   ",
        "        7            5            2            8            1            3            7 \n221028000000 221030000000 221031000000 221101000000 221102000000 221103000000 221104000000 \n          11            1            5            5            8            3            4 \n221105000000 221106000000 221107000000 221108000000 221109000000 221110000000 221111000000 \n           4            4            4            9            6            4            3 \n221112000000 221113000000 221114000000 221115000000 221",
        "116000000 221117000000 221118000000 \n           5            7            2            3            2            5            1 \n221119000000 221120000000 221121000000 221122000000 221123000000 221124000000 221125000000 \n           8            2            5            8            3            7            1 \n221126000000 221127000000 221128000000 221129000000 221130000000 221201000000 221202000000 \n           5            4            3            7            5            2            2 \n221203000000 22",
        "1204000000 221205000000 221206000000 221207000000 221208000000 221209000000 \n           5            4            5            3            4            4            3 \n221210000000 221211000000 221212000000 221213000000 221214000000 221215000000 221216000000 \n           4            3            1            5            3            1            5 \n221217000000 221218000000 221219000000 221220000000 221221000000 221222000000 221223000000 \n           5            2            1            3            4   ",
        "         1            1 \n221224000000 221225000000 221226000000 221227000000 221228000000 221229000000 221230000000 \n           4            1            2            1            2            1            1 \n230101000000 230102000000 230103000000 230104000000 230105000000 230106000000 230107000000 \n           1            2            1            3            3            3            2 \n230108000000 230109000000 230110000000 230111000000 230112000000 230113000000 230114000000 \n           7            5  ",
        "         15            2            2            5            7 \n230115000000 230116000000 230117000000 230118000000 230119000000 230120000000 230121000000 \n           7            6           15            5            7            6           11 \n230122000000 230123000000 230124000000 230125000000 230126000000 230127000000 230128000000 \n           6            7            6            5            7            3            6 \n230129000000 230130000000 230131000000 230201000000 230202000000 230203000000 2",
        "30204000000 \n           6            5            6            5            3            8            5 \n230205000000 230206000000 230207000000 230208000000 230209000000 230210000000 230211000000 \n           4            6            6            6            5            5            5 \n230212000000 230213000000 230214000000 230215000000 230216000000 230217000000 230218000000 \n           7            3            9            5            3            6            8 \n230219000000 230220000000 230221000000 ",
        "230222000000 230223000000 230224000000 230225000000 \n           9            9            6            6            7            7            5 \n230226000000 230227000000 230228000000 230301000000 230302000000 230303000000 230304000000 \n           8            9            7            3           13            4            6 \n230305000000 230306000000 230307000000 230308000000 230309000000 230310000000 230311000000 \n           6            8            4            3            3            3            3 ",
        "\n230312000000 230313000000 230314000000 230315000000 230316000000 230317000000 230318000000 \n           6            3            9            5            5            5            8 \n230319000000 230320000000 230321000000 230322000000 230323000000 230324000000 230325000000 \n           8           12            4            3            5            5            6 \n230326000000 230327000000 230328000000 230329000000 230330000000 230331000000 230401000000 \n           3            5            5            8",
        "            4            3            6 \n230402000000 230403000000 230404000000 230405000000 230406000000 230407000000 230408000000 \n           3            4           10            6            4            5            2 \n230409000000 230410000000 230411000000 230412000000 230413000000 230414000000 230415000000 \n           3            2            2            5           12           10            5 \n230416000000 230417000000 230418000000 230419000000 230420000000 230421000000 230422000000 \n           ",
        "7            5            9            8            6            3            8 \n230423000000 230424000000 230425000000 230426000000 230427000000 230428000000 230429000000 \n           7            7            2            7            5            3            5 \n230430000000 230501000000 230502000000 230503000000 230504000000 230505000000 230506000000 \n           3            2            3            4            6            5            7 \n230507000000 230508000000 230509000000 230510000000 23051100000",
        "0 230512000000 230513000000 \n           4           10            7            5            8           11            4 \n230514000000 230515000000 230516000000 230517000000 230518000000 230519000000 230520000000 \n           5           10           10            7            5            5            9 \n230521000000 230522000000 230523000000 230524000000 230525000000 230526000000 230527000000 \n           9           15            6            7           10            9            7 \n230528000000 2305290000",
        "00 230530000000 230531000000 230601000000 230602000000 230603000000 \n          11            7            7            9            5            5            4 \n230604000000 230605000000 230606000000 230607000000 230608000000 230609000000 230610000000 \n           6            4            8           10            7            8            8 \n230611000000 230612000000 230613000000 230614000000 230615000000 230616000000 230617000000 \n           4            8            8           14           10           ",
        " 6            6 \n230618000000 230619000000 230620000000 230621000000 230622000000 230623000000 \n           5           10            8            7           13            9 \n [ reached 'max' / getOption(\"max.print\") -- omitted 724 entries ]\n",
        "> ",
        "student_performance$task_rating <- round(student_performance$Awarded / ",
        "+ ",
        "      (student_performance$Awarded + student_performance$Rejected), 2)",
        "> ",
        "> ",
        "student_performance$training_rating <- round(student_performance$Completed / ",
        "+ ",
        "      (student_performance$Incomplete + student_performance$Participated +       ",
        "+ ",
        "         student_performance$Withdrawn + student_performance$Completed), 2)",
        "> ",
        "str(student_performance)",
        "'data.frame':\t10139 obs. of  16 variables:\n $ TumoID                : num  240712000018 240924000012 230619000016 230121000032 250415000009 ...\n $ Age                   : int  14 13 14 14 13 13 13 15 20 14 ...\n $ Classification        : chr  \"T\" \"T\" \"M\" \"M\" ...\n $ Schedule              : chr  \"Sunday 13:30\" \"Monday 17:30\" \"Sunday 13:30\" \"Tuesday 19:30\" ...\n $ Status                : chr  \"Active\" \"Preclosed\" \"Active\" \"Active\" ...\n $ RetentionGrouped      : chr  \"0.5 - 1 Year\" \"0.1 - 0.5 Year\" \"1.5 - 2 Year\"",
        " \"2 - 2.5 Year\" ...\n $ Awarded               : int  38 8 36 35 12 13 19 20 22 52 ...\n $ Rejected              : int  6 0 4 2 4 2 1 3 0 1 ...\n $ Completed             : int  1 0 5 4 0 0 1 2 0 6 ...\n $ Incomplete            : int  0 0 0 2 0 0 0 0 0 1 ...\n $ Participated          : int  0 0 0 0 0 1 2 0 0 0 ...\n $ Withdrawn             : int  0 0 0 2 0 0 0 0 1 1 ...\n $ LearningLabs.Completed: int  0 0 1 2 0 0 0 0 0 0 ...\n $ AttendingSince        : chr  \"10/10/2024\" \"2/10/2025\" \"12/7/2023\" \"6/6/2023\" ...\n $ task",
        "_rating           : num  0.86 1 0.9 0.95 0.75 0.87 0.95 0.87 1 0.98 ...\n $ training_rating       : num  1 NaN 1 0.5 NaN 0 0.33 1 0 0.75 ...\n",
        "> ",
        "table(student_performance$task_rating)",
        "\n0.36  0.5 0.52 0.53 0.54 0.57 0.58 0.59  0.6 0.61 0.62 0.63 0.64 0.65 0.67 0.68 0.69  0.7 \n   1    1    1    1    2    4    4    2    4    1    6    4    6   17   14   14   23   21 \n0.71 0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79  0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 \n  30   23   28   38   53   54   57   77   96   89  108  128  144  113  182  236  167  352 \n0.89  0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99    1 \n 331  392  384  472  534  631  727  776  793  682  150 2166 \n",
        "> ",
        "table(student_performance$training_rating)",
        "\n   0 0.08 0.09  0.1 0.11 0.12 0.13 0.14 0.17 0.18  0.2 0.21 0.22 0.23 0.25 0.27 0.28 0.29 \n 946    6    5    4    8   17    1   27   38    9   75    3   17    6  190    7    1   61 \n 0.3 0.31 0.32 0.33 0.35 0.36 0.37 0.38 0.39  0.4 0.41 0.42 0.43 0.44 0.45 0.46 0.47 0.48 \n  26    4    2  365    2   20    1   54    2  181    2   11   68   42   20    9    7    1 \n 0.5 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59  0.6 0.62 0.64 0.65 0.67 0.68 0.69  0.7 0.71 \n1012    3    6   11   27   52  114   25    2  252  117  ",
        " 32    3  754    2   14   55  156 \n0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79  0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89 \n   2   35    1  483    6   15   49   13  320    4   23  233    1    9  143    6  108   56 \n 0.9 0.91 0.92 0.93 0.94 0.95 0.96    1 \n  38   17   13    8    4    1    1 2520 \n",
        "> ",
        "merged_df <- inner_join(student_info, student_performance, by = \"TumoID\")",
        "> ",
        "merged_df$PresenceRatio <- round(as.integer(merged_df$PresenceRatio) / 100, 2)",
        "> ",
        "ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Task Rating vs Attendance Ratio\",",
        "+ ",
        "    x = \"Attendance (%)\",",
        "+ ",
        "    y = \"Task Rating (%)\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0, 100, 10))",
        "> ",
        "ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(color = \"steelblue\", size = 2, alpha = 0.7) +                        # points",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\", linewidth = 1) +       # trend line with CI",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Attendance vs Task Rating with Regression Trend Line\",",
        "+ ",
        "    x = \"Attendance Ratio\",",
        "+ ",
        "    y = \"Task Rating\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0, 1, 0.1)) +                                  # ticks every 0.1",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\", size = 12),",
        "+ ",
        "    axis.text = element_text(size = 10)",
        "+ ",
        "  )",
        "> ",
        "pairs(merged_df[, c(\"PresenceRatio\", \"task_rating\")],",
        "+ ",
        "      main = \"Scatterplot Matrix\")",
        "> ",
        "spearman_cor_test_result <- cor.test(merged_df$PresenceRatio, merged_df$task_rating,",
        "+ ",
        "                            method = \"spearman\", exact = FALSE, use = \"complete.obs\")",
        "> ",
        "spearman_cor_test_result",
        "\n\tSpearman's rank correlation rho\n\ndata:  merged_df$PresenceRatio and merged_df$task_rating\nS = 13193615048, p-value = 0.0003643\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n        rho \n-0.05486129 \n\n",
        "> ",
        "pearson_cor_test_result <- cor.test(merged_df$PresenceRatio, merged_df$task_rating,",
        "+ ",
        "                            method = \"pearson\", exact = FALSE, use = \"complete.obs\")",
        "> ",
        "pearson_cor_test_result",
        "\n\tPearson's product-moment correlation\n\ndata:  merged_df$PresenceRatio and merged_df$task_rating\nt = -1.0881, df = 4216, p-value = 0.2766\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.04691147  0.01343134\nsample estimates:\n        cor \n-0.01675532 \n\n",
        "> ",
        "p1 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"steelblue\") +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\") +",
        "+ ",
        "  labs(title = \"Pearson Correlation (Linear)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "# Spearman scatterplot with loess smooth (captures monotonic relationship)",
        "> ",
        "p2 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"darkgreen\") +",
        "+ ",
        "  geom_smooth(method = \"loess\", se = TRUE, color = \"forestgreen\") +",
        "+ ",
        "  labs(title = \"Spearman Correlation (Monotonic)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "p1 + p2",
        "> ",
        "course_outcomes <- merged_df %>%",
        "+ ",
        "  mutate(total_courses = Completed + Incomplete + Participated + Withdrawn) %>%",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(Completed, Incomplete, Participated, Withdrawn),",
        "+ ",
        "    names_to = \"Outcome\",",
        "+ ",
        "    values_to = \"Count\"",
        "+ ",
        "  )",
        "> ",
        "course_outcomes <- course_outcomes %>%",
        "+ ",
        "  mutate(total_bin = cut(total_courses, breaks = c(0, 2, 5, 10, Inf),",
        "+ ",
        "                         labels = c(\"1-2\", \"3-5\", \"6-10\", \"10+\"), right = FALSE))",
        "> ",
        "> ",
        "ggplot(course_outcomes, aes(x = total_bin, y = Count, fill = Outcome)) +",
        "+ ",
        "  geom_bar(stat = \"identity\", position = \"fill\") +",
        "+ ",
        "  scale_y_continuous(labels = percent_format()) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Proportion of Course Outcomes by Number of Courses Started\",",
        "+ ",
        "    x = \"Total Number of Courses Started (Binned)\",",
        "+ ",
        "    y = \"Proportion of Outcomes\",",
        "+ ",
        "    fill = \"Outcome\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "df <- merged_df %>%",
        "+ ",
        "  mutate(",
        "+ ",
        "    total_courses = Completed + Participated + Rejected + Withdrawn,",
        "+ ",
        "    course_volume_group = cut(",
        "+ ",
        "      total_courses,",
        "+ ",
        "      breaks = c(-Inf, 2, 5, 10, Inf),",
        "+ ",
        "      labels = c(\"1–2\", \"3–5\", \"6-10\", \"10+\")",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "> ",
        "> ",
        "outcome_table <- df %>%",
        "+ ",
        "  group_by(course_volume_group) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    Completed = sum(Completed, na.rm = TRUE),",
        "+ ",
        "    Participated = sum(Participated, na.rm = TRUE),",
        "+ ",
        "    Failed = sum(Rejected, na.rm = TRUE),",
        "+ ",
        "    Withdrawn = sum(Withdrawn, na.rm = TRUE)",
        "+ ",
        "  )",
        "> ",
        "outcome_matrix <- as.matrix(outcome_table[, -1])",
        "> ",
        "rownames(outcome_matrix) <- outcome_table$course_volume_group",
        "> ",
        "chisq_result <- chisq.test(outcome_matrix)",
        "> ",
        "outcome_matrix",
        "     Completed Participated Failed Withdrawn\n1–2        428          128    644        56\n3–5       2355          557   2685       406\n6-10      4782          746   5227       865\n10+       2266           38   1568       631\n",
        "> ",
        "chisq_result",
        "\n\tPearson's Chi-squared test\n\ndata:  outcome_matrix\nX-squared = 762.73, df = 9, p-value < 0.00000000000000022\n\n",
        "> ",
        "mosaicplot(outcome_matrix,",
        "+ ",
        "           main = \"Mosaic Plot: Course Volume vs Performance Outcome\",",
        "+ ",
        "           color = TRUE,",
        "+ ",
        "           xlab = \"Number of Courses Started\",",
        "+ ",
        "           ylab = \"Performance Outcome\",",
        "+ ",
        "           las = 1,          ",
        "+ ",
        "           cex.axis = 0.8) ",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(corrplot)",
        "> ",
        "library(patchwork)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(scales)",
        "> ",
        "library(vcd)",
        "> ",
        "student_performance <- read.csv(\"TUMO Yerevan_Students Performance_Table - Sheet1.csv\")",
        "> ",
        "str(student_performance)",
        "'data.frame':\t10139 obs. of  14 variables:\n $ TumoID                : num  240712000018 240924000012 230619000016 230121000032 250415000009 ...\n $ Age                   : int  14 13 14 14 13 13 13 15 20 14 ...\n $ Classification        : chr  \"T\" \"T\" \"M\" \"M\" ...\n $ Schedule              : chr  \"Sunday 13:30\" \"Monday 17:30\" \"Sunday 13:30\" \"Tuesday 19:30\" ...\n $ Status                : chr  \"Active\" \"Preclosed\" \"Active\" \"Active\" ...\n $ RetentionGrouped      : chr  \"0.5 - 1 Year\" \"0.1 - 0.5 Year\" \"1.5 - 2 Year\"",
        " \"2 - 2.5 Year\" ...\n $ Awarded               : int  38 8 36 35 12 13 19 20 22 52 ...\n $ Rejected              : int  6 0 4 2 4 2 1 3 0 1 ...\n $ Completed             : int  1 0 5 4 0 0 1 2 0 6 ...\n $ Incomplete            : int  0 0 0 2 0 0 0 0 0 1 ...\n $ Participated          : int  0 0 0 0 0 1 2 0 0 0 ...\n $ Withdrawn             : int  0 0 0 2 0 0 0 0 1 1 ...\n $ LearningLabs.Completed: int  0 0 1 2 0 0 0 0 0 0 ...\n $ AttendingSince        : chr  \"10/10/2024\" \"2/10/2025\" \"12/7/2023\" \"6/6/2023\" ...\n",
        "> ",
        "student_info <- read.csv(\"TUMO Yerevan Center Report_Students List_Table - Sheet1.csv\", colClasses = c(\"TumoID\" = \"character\"))",
        "> ",
        "str(student_info) # ",
        "'data.frame':\t10428 obs. of  11 variables:\n $ TumoID           : chr  \"2.30326E+11\" \"2.30113E+11\" \"2.40401E+11\" \"2.50414E+11\" ...\n $ BirthDate        : chr  \"11-Jul-10\" \"9-Nov-10\" \"20-Mar-12\" \"29-Jan-13\" ...\n $ Classification   : chr  \"M\" \"U\" \"T\" \"T\" ...\n $ Status           : chr  \"Active\" \"Active\" \"Active\" \"Active\" ...\n $ StudentSchedule  : chr  \"Sunday 13:30\" \"Friday 17:30\" \"Wednesday 15:30\" \"Wednesday 19:30\" ...\n $ AttendingSince   : chr  \"14-Sep-23\" \"12-Apr-23\" \"5-Jun-24\" \"7-May-25\" ...\n $ RetentionByMo",
        "nths: int  22 27 13 2 27 21 18 6 6 8 ...\n $ RetentionGrouped : chr  \"1.5 - 2 Year\" \"2 - 2.5 Year\" \"1 - 1.5 Year\" \"0.1 - 0.5 Year\" ...\n $ Age              : int  15 14 13 12 14 15 14 14 12 12 ...\n $ Present          : chr  \"109\" \"120\" \"64\" \"13\" ...\n $ PresenceRatio    : chr  \"85\" \"90\" \"86\" \"81\" ...\n",
        "> ",
        "student_info$TumoID <- as.numeric(student_info$TumoID)",
        "> ",
        "options(scipen = 999) ",
        "> ",
        "#table(student_info$TumoID)",
        "> ",
        "student_performance$task_rating <- round(student_performance$Awarded / ",
        "+ ",
        "      (student_performance$Awarded + student_performance$Rejected), 2)",
        "> ",
        "> ",
        "student_performance$training_rating <- round(student_performance$Completed / ",
        "+ ",
        "      (student_performance$Incomplete + student_performance$Participated +       ",
        "+ ",
        "         student_performance$Withdrawn + student_performance$Completed), 2)",
        "> ",
        "str(student_performance)",
        "'data.frame':\t10139 obs. of  16 variables:\n $ TumoID                : num  240712000018 240924000012 230619000016 230121000032 250415000009 ...\n $ Age                   : int  14 13 14 14 13 13 13 15 20 14 ...\n $ Classification        : chr  \"T\" \"T\" \"M\" \"M\" ...\n $ Schedule              : chr  \"Sunday 13:30\" \"Monday 17:30\" \"Sunday 13:30\" \"Tuesday 19:30\" ...\n $ Status                : chr  \"Active\" \"Preclosed\" \"Active\" \"Active\" ...\n $ RetentionGrouped      : chr  \"0.5 - 1 Year\" \"0.1 - 0.5 Year\" \"1.5 - 2 Year\"",
        " \"2 - 2.5 Year\" ...\n $ Awarded               : int  38 8 36 35 12 13 19 20 22 52 ...\n $ Rejected              : int  6 0 4 2 4 2 1 3 0 1 ...\n $ Completed             : int  1 0 5 4 0 0 1 2 0 6 ...\n $ Incomplete            : int  0 0 0 2 0 0 0 0 0 1 ...\n $ Participated          : int  0 0 0 0 0 1 2 0 0 0 ...\n $ Withdrawn             : int  0 0 0 2 0 0 0 0 1 1 ...\n $ LearningLabs.Completed: int  0 0 1 2 0 0 0 0 0 0 ...\n $ AttendingSince        : chr  \"10/10/2024\" \"2/10/2025\" \"12/7/2023\" \"6/6/2023\" ...\n $ task",
        "_rating           : num  0.86 1 0.9 0.95 0.75 0.87 0.95 0.87 1 0.98 ...\n $ training_rating       : num  1 NaN 1 0.5 NaN 0 0.33 1 0 0.75 ...\n",
        "> ",
        "table(student_performance$task_rating)",
        "\n0.36  0.5 0.52 0.53 0.54 0.57 0.58 0.59  0.6 0.61 0.62 0.63 0.64 0.65 0.67 0.68 0.69  0.7 \n   1    1    1    1    2    4    4    2    4    1    6    4    6   17   14   14   23   21 \n0.71 0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79  0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 \n  30   23   28   38   53   54   57   77   96   89  108  128  144  113  182  236  167  352 \n0.89  0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99    1 \n 331  392  384  472  534  631  727  776  793  682  150 2166 \n",
        "> ",
        "table(student_performance$training_rating)",
        "\n   0 0.08 0.09  0.1 0.11 0.12 0.13 0.14 0.17 0.18  0.2 0.21 0.22 0.23 0.25 0.27 0.28 0.29 \n 946    6    5    4    8   17    1   27   38    9   75    3   17    6  190    7    1   61 \n 0.3 0.31 0.32 0.33 0.35 0.36 0.37 0.38 0.39  0.4 0.41 0.42 0.43 0.44 0.45 0.46 0.47 0.48 \n  26    4    2  365    2   20    1   54    2  181    2   11   68   42   20    9    7    1 \n 0.5 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59  0.6 0.62 0.64 0.65 0.67 0.68 0.69  0.7 0.71 \n1012    3    6   11   27   52  114   25    2  252  117  ",
        " 32    3  754    2   14   55  156 \n0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79  0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89 \n   2   35    1  483    6   15   49   13  320    4   23  233    1    9  143    6  108   56 \n 0.9 0.91 0.92 0.93 0.94 0.95 0.96    1 \n  38   17   13    8    4    1    1 2520 \n",
        "> ",
        "merged_df <- inner_join(student_info, student_performance, by = \"TumoID\")",
        "> ",
        "merged_df$PresenceRatio <- round(as.integer(merged_df$PresenceRatio) / 100, 2)",
        "> ",
        "ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Task Rating vs Attendance Ratio\",",
        "+ ",
        "    x = \"Attendance (%)\",",
        "+ ",
        "    y = \"Task Rating (%)\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0, 100, 10))",
        "> ",
        "ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(color = \"steelblue\", size = 2, alpha = 0.7) +                        # points",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\", linewidth = 1) +       # trend line with CI",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Attendance vs Task Rating with Regression Trend Line\",",
        "+ ",
        "    x = \"Attendance Ratio\",",
        "+ ",
        "    y = \"Task Rating\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0, 1, 0.1)) +                                  # ticks every 0.1",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\", size = 12),",
        "+ ",
        "    axis.text = element_text(size = 10)",
        "+ ",
        "  )",
        "> ",
        "pairs(merged_df[, c(\"PresenceRatio\", \"task_rating\")],",
        "+ ",
        "      main = \"Scatterplot Matrix\")",
        "> ",
        "spearman_cor_test_result <- cor.test(merged_df$PresenceRatio, merged_df$task_rating,",
        "+ ",
        "                            method = \"spearman\", exact = FALSE, use = \"complete.obs\")",
        "> ",
        "spearman_cor_test_result",
        "\n\tSpearman's rank correlation rho\n\ndata:  merged_df$PresenceRatio and merged_df$task_rating\nS = 13193615048, p-value = 0.0003643\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n        rho \n-0.05486129 \n\n",
        "> ",
        "pearson_cor_test_result <- cor.test(merged_df$PresenceRatio, merged_df$task_rating,",
        "+ ",
        "                            method = \"pearson\", exact = FALSE, use = \"complete.obs\")",
        "> ",
        "pearson_cor_test_result",
        "\n\tPearson's product-moment correlation\n\ndata:  merged_df$PresenceRatio and merged_df$task_rating\nt = -1.0881, df = 4216, p-value = 0.2766\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.04691147  0.01343134\nsample estimates:\n        cor \n-0.01675532 \n\n",
        "> ",
        "p1 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"steelblue\") +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = TRUE, color = \"darkred\") +",
        "+ ",
        "  labs(title = \"Pearson Correlation (Linear)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "# Spearman scatterplot with loess smooth (captures monotonic relationship)",
        "> ",
        "p2 <- ggplot(merged_df, aes(x = PresenceRatio, y = task_rating)) +",
        "+ ",
        "  geom_point(alpha = 0.6, color = \"darkgreen\") +",
        "+ ",
        "  geom_smooth(method = \"loess\", se = TRUE, color = \"forestgreen\") +",
        "+ ",
        "  labs(title = \"Spearman Correlation (Monotonic)\",",
        "+ ",
        "       x = \"Attendance Ratio\",",
        "+ ",
        "       y = \"Task Rating\") +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "> ",
        "p1 + p2",
        "> ",
        "course_outcomes <- merged_df %>%",
        "+ ",
        "  mutate(total_courses = Completed + Incomplete + Participated + Withdrawn) %>%",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(Completed, Incomplete, Participated, Withdrawn),",
        "+ ",
        "    names_to = \"Outcome\",",
        "+ ",
        "    values_to = \"Count\"",
        "+ ",
        "  )",
        "> ",
        "course_outcomes <- course_outcomes %>%",
        "+ ",
        "  mutate(total_bin = cut(total_courses, breaks = c(0, 2, 5, 10, Inf),",
        "+ ",
        "                         labels = c(\"1-2\", \"3-5\", \"6-10\", \"10+\"), right = FALSE))",
        "> ",
        "> ",
        "ggplot(course_outcomes, aes(x = total_bin, y = Count, fill = Outcome)) +",
        "+ ",
        "  geom_bar(stat = \"identity\", position = \"fill\") +",
        "+ ",
        "  scale_y_continuous(labels = percent_format()) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Proportion of Course Outcomes by Number of Courses Started\",",
        "+ ",
        "    x = \"Total Number of Courses Started (Binned)\",",
        "+ ",
        "    y = \"Proportion of Outcomes\",",
        "+ ",
        "    fill = \"Outcome\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "df <- merged_df %>%",
        "+ ",
        "  mutate(",
        "+ ",
        "    total_courses = Completed + Participated + Rejected + Withdrawn,",
        "+ ",
        "    course_volume_group = cut(",
        "+ ",
        "      total_courses,",
        "+ ",
        "      breaks = c(-Inf, 2, 5, 10, Inf),",
        "+ ",
        "      labels = c(\"1–2\", \"3–5\", \"6-10\", \"10+\")",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "> ",
        "> ",
        "outcome_table <- df %>%",
        "+ ",
        "  group_by(course_volume_group) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    Completed = sum(Completed, na.rm = TRUE),",
        "+ ",
        "    Participated = sum(Participated, na.rm = TRUE),",
        "+ ",
        "    Failed = sum(Rejected, na.rm = TRUE),",
        "+ ",
        "    Withdrawn = sum(Withdrawn, na.rm = TRUE)",
        "+ ",
        "  )",
        "> ",
        "outcome_matrix <- as.matrix(outcome_table[, -1])",
        "> ",
        "rownames(outcome_matrix) <- outcome_table$course_volume_group",
        "> ",
        "chisq_result <- chisq.test(outcome_matrix)",
        "> ",
        "outcome_matrix",
        "     Completed Participated Failed Withdrawn\n1–2        428          128    644        56\n3–5       2355          557   2685       406\n6-10      4782          746   5227       865\n10+       2266           38   1568       631\n",
        "> ",
        "chisq_result",
        "\n\tPearson's Chi-squared test\n\ndata:  outcome_matrix\nX-squared = 762.73, df = 9, p-value < 0.00000000000000022\n\n",
        "> ",
        "mosaicplot(outcome_matrix,",
        "+ ",
        "           main = \"Mosaic Plot: Course Volume vs Performance Outcome\",",
        "+ ",
        "           color = TRUE,",
        "+ ",
        "           xlab = \"Number of Courses Started\",",
        "+ ",
        "           ylab = \"Performance Outcome\",",
        "+ ",
        "           las = 1,          ",
        "+ ",
        "           cex.axis = 0.8) ",
        "> ",
        "install.packages(\"tinytex\")",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "> ",
        "install.packages(\"tinytex\")",
        "\u001BG2;\u001BH2;WARNING\u001Bh: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\n\u001BG3;Installing package into ‘C:/Users/hayka/AppData/Local/R/win-library/4.5’\n(as ‘lib’ is unspecified)\n\u001Bg\u001Bgtrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/tinytex_0.57.zip'\nContent type 'application/zip' length 146892 bytes (143 KB)\ndownloaded 143 KB\n\n",
        "package ‘tinytex’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\hayka\\AppData\\Local\\Temp\\RtmpYbAsjL\\downloaded_packages\n",
        "> ",
        "tinytex::install_tinytex()",
        "trying URL 'https://yihui.org/tinytex/TinyTeX-1.zip'\nContent type 'application/octet-stream' length 120614340 bytes (115.0 MB)\ndownloaded 60.0 MB\n\ntrying URL 'https://yihui.org/tinytex/TinyTeX-1.zip'\nContent type 'application/octet-stream' length 120614340 bytes (115.0 MB)\ndownloaded 100.0 MB\n\ntrying URL 'https://yihui.org/tinytex/TinyTeX-1.zip'\nContent type 'application/octet-stream' length 120614340 bytes (115.0 MB)\n",
        "> ",
        "install.packages(\"tinytex\")",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "> ",
        "tinytex::install_tinytex()",
        "\u001BG3;Restarting R session...\u001Bg",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg"
    ]
}